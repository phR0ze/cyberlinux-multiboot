#MIT License
#Copyright (c) 2017-2021 phR0ze
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

#-------------------------------------------------------------------------------
# Maintainer: phR0ze
#-------------------------------------------------------------------------------
pkgbase=cyberlinux-standard
pkgname=(
    'cyberlinux-standard-core'
    'cyberlinux-standard-base'
    'cyberlinux-standard-shell'
    'cyberlinux-lite-profile'
#    'cyberlinux-server-profile'
#    'cyberlinux-netbook-profile'
#    'cyberlinux-theater-profile'
#    'cyberlinux-desktop-profile'
#    'cyberlinux-laptop-profile'
)
pkgver=0.0.16
pkgrel=1
pkgdesc='Configuration for various cyberlinux profiles'
arch=('any')
license=('MIT')
url="https://github.com/phR0ze/cyberlinux/aur/cyberlinux-profiles"

# Configure environment
shopt -s dotglob
shopt -s extglob
_none="\e[m"
_cyan="\e[1;36m"
_profile=standard

# Because were running the makepkg in a container at a specific location
# the staging location is /home/build/PKG
pkg() {
  local name=$1                       # e.g. core
  install=$name.install               # Specific installer script for deployment package
  local configs="${startdir}/${name}" # /home/build/profiles/standard/core

  if [ -d "${configs}" ]; then
    msg "${_cyan}Installing '${name}' configuration files${_none}"
    cp -a "$configs"/* "${pkgdir}"
  fi
}

package_cyberlinux-standard-core()
{
  pkgdesc="Minimal bash container"
  depends=(
    'bash'                      # Bourne Again shell
    'bash-completion'           # Bash tab completion
    'ca-certificates'           # Trusted list of CAs: foundational for any encryption
    'coreutils'                 # Basic linux utilities like ls, cp, mv
    'lsb-release'               # LSB version query program
    'sed'                       # GNU stream editor
  )
  pkg core
}

package_cyberlinux-standard-base()
{
  pkgdesc="Minimal bash system - a building block for lite deployments"
  depends=(
    'cyberlinux-standard-core'  # Smallest set of packages possible for a functioning container with bash
    'systemd'                   # System and service manager
    'systemd-sysvcompat'        # Sysinit compat for systemd
    'gnutls'                    # required by systemd-resolved to work
    'mkinitcpio-vt-colors'      # vt-colors, mkintcpio, find, xargs, gawk, grep
    'efibootmgr'                # Provide the ability to modify the EFI boot manager entries
    'grub'                      # Required to boot legacy BIOS systems
    'intel-ucode'               # required for Intel Microcode update files to boot
    'linux'                     # Linux kernel and supporting modules
    'linux-firmware'            # Fills in missing drivers for initramfs builds
    'linux-headers'             # Linux kernel headers

    # Essential networking
    'archlinux-keyring'         # Arch linux keyring for installing packages
    'blackarch-keyring'         # Adding curl command to pull in packer scripts
    'pacman'                    # pacman, makepkg, repo-add
    'pacman-contrib'            # rankmirrors, pacdiff, pactree, paclist, pacsearch
    'openssh'                   # SSH server/client, openssl
    'wget'                      # Retrieve files from the Web
    'curl'                      # Adding curl command to pull in packer scripts

    # Essential tools
    'sudo'                      # Elevate user commands on demand to root
    'vim'                       # Improved version of vi text editor
  )

  pkg base
}

package_cyberlinux-standard-shell()
{
  pkgdesc="Full bash system - a building block for heavy deployments"
  depends=(
    'cyberlinux-standard-base'  # Minimal bash system - a building block for lite deployments

    # system tools
    'cdrtools'                  # isoinfo, mkisofs
    'cyberlinux-screenfetch'    # CLI bash script to show system theme for screenshots
    'dos2unix'                  # Text file format converter
    'dosfstools'                # mkfs.fat, mkfs.vfat, fsck.fat, fsck.vfat
    'gawk'                      # GNU version of awk, depof: [mkinitcpio], group: [base-devel]
    'gptfdisk'                  # sgdisk, gdisk, cgdisk
    'logrotate'                 # Rotates system logs automatically
    'inxi'                      # System info display tool for CPUs/RAM/Kernel etc...
    'man-db'                    # A utility for reading man pages
    'man-pages'                 # Linux man pages
    'pkgfile'                   # A pacman files and metadata explorer
    'psmisc'                    # fuser, killall, pstree
    'procps-ng'                 # pidof, pkill, ps, top, uptime
    'tmux'                      # Terminal multiplexer built off screen
    'util-linux'                # Ext2/3/4 filesystem utils, passwd, useradd, groupadd, blkid, fdisk
    'libisoburn'                # xorriso ISO creation tools
    'lsof'                      # Lists open files for running processes
    'moreutils'                 # Linux utils e.g. parallel-moreutils
    'smartmontools'             # Control/monitor S.M.A.R.T. Drives
    'udisks2'                   # Enumerate and operate on storage devices
    'usbutils'                  # USB device utilities including lsusb
    'squashfs-tools'            # mksquashfs, unsquashfs

    # recovery tools
    'ddrescue'                  # GNU data recovery tool
    'testdisk'                  # Checks and undeletes partitions + photorec

    # networking tools
    'bindip'                    # Bind a service to a specifc IP Address, repo: CYBERLINUX
    'dnsutils'                  # Network utilities dig/host/nslookup
    'gnu-netcat'                # Network piping application
    'inetutils'                 # hostname, ftp, telnet
    'iproute2'                  # ifcfg, ip other networking tools
    'iputils'                   # Network utils e.g. ping/tftpd
    'net-tools'                 # arp, ifconfig, iptunnel, netstat
    'nfs-utils'                 # Support programs for Network File Systems
    'nmap'                      # Network discovery and security auditing
    'rsync'                     # Remote file transfer sync utility
    'tcpdump'                   # Network monitoring and data acquisition
    'which'                     # Show the full path of commnds, depof: .bashrc, group: [build-devel]

    # archive tools
    'p7zip'                     # Comman-line file archiver for 7zip format, depof: thunar
    'tar'                       # File store backup and transport utility
    'unrar'                     # The RAR uncompression program
    'unzip'                     # Extract and view files in .zip archives
    'zip'                       # Zip file compression utilities

    # development tools
    'autoconf'                  # Automatically configure source code, group: [base-devel]
    'automake'                  # Automatically create Makefiles, group: [base-devel]
    'binutils'                  # Manipulate binary and object files, group: [base-devel]
    'bison'                     # General purpose parser generator, group: [base-devel]
    'arch-install-scripts'      # arch-chroot, genfstab, pacstrap
    'clang'                     # C language family frontend for LLVM
    'diffutils'                 # Patch file utility programs: diff, cmp
    'fakeroot'                  # Tool for simulating supersuer privileges, group: [base-devel]
    'file'                      # File type identification utility, group: [base-devel]
    'flex'                      # Generate text-scanning programs, group: [base-devel]
    'gdb'                       # The GNU debugger
    'gcc'                       # GNU Compiler Collection, multilib: false, group: [base-devel]
    'gcc-multilib'              # GNU Compiler Collection
    'gettext'                   # required by grub, group: [base-devel]
    'git'                       # Fast distributed version control system
    'groff'                     # GNU trof text-formatting system, group: [base-devel]
    'jq'                        # Command line JSON processor, depof: kubectl
    'libtool'                   # Generic library support script, group: [base-devel]
    'lld'                       # Linker from the LLVM project, depof: chromium
    'llvm'                      # Low Level compiler infrastructure, depof: chromium
    'ltrace'                    # Tracks runtime library calls in dynamically linked programs
    'm4'                        # GNU macro processor, group: [base-devel]
    'make'                      # GNU utility to build programs, group: [base-devel]
    'patch'                     # Utility to apply patches to files, group: [base-devel]
    'pkgconfig'                 # System for managing library flags, group: [base-devel]
    'psmisc'                    # fuser/killall/pstree 
    'python-pip'                # The PyPA recommended tool for installing Python packages
    'strace'                    # A diagnostic, debugging and instructional userspace tracer
    'texinfo'                   # Documentation for online information, group: [base-devel]
    'yq'                        # Command-line YAML processor - jq wrapper for YAML documents

    # Golang
    'delve'                     # A debugger for the Go Programming Language
    'go'                        # Compiler and tools for the Go programming lang
    'go-bindata'                # Embed any file as Go code
    'go-tools'                  # Developer tools for the Go programming lang
  )
  pkg shell
}

package_cyberlinux-lite-profile()
{
  pkgdesc="Lite X11 system - a building block specialized X11 deployments"
  depends=(
    'cyberlinux-standard-shell' # Full bash system - a building block for heavy deployments

    # lxde
    # opengl
    # virtualbox-guest
    # Utils
      - {install: dmenu,            desc: Super light weight application runner }
      - {install: galculator,       desc: Office/Calculator }
      - {install: gsimplecal,       desc: Simple calendar like windows systray calendar }
      - {install: powerline,        desc: Status line plugin for bash }
      - {install: powerline-gitstatus, desc: Powerline plugin for git status, repo: CYBERLINUX }
      - {install: powerline-fonts,  desc: Powerline font symbols }
      - {install: xfce4-screenshooter, desc: Plugin that makes screenshots for the Xfce panel }
      - filelight

    # Media
      - {install: flac,             desc: Free lossless audio codec }
      - {install: gpicview,         desc: Image viewer, alt: shotwell/viewnior }
      - {install: lame,             desc: High quality MPEG layer III audio encoder }
      - {install: parallel,         desc: Shell tool for executing jobs in parallel }
      - {install: qt4,              desc: A cross-platform application and UI framework, deps: vlc }
      - {install: qt5-base,         desc: A cross-platform application and UI framework, deps: mkvtoolnix-gui }
      - {install: smplayer,         desc: UI wrapper around mplayer with click to pause, alt: vlc }
      - {install: smplayer-skins,   desc: Skins for SMPlayer }
      - {install: smplayer-themes,  desc: Themes for SMPlayer }
      - {install: vlc,              desc: Multi-platform MPEG, VCD/DVD, and DivX player }
      - {install: winff,            desc: GUI for ffmpeg, repo: CYBERLINUX }
      - {install: xnviewmp,         desc: A digital photo organizer, repo: CYBERLINUX }
      - audacious

    # Network
      - {install: chromium,         desc: Opensource project behind Chrome, repo: CYBERLINUX }
      - {install: chromium-widevine, desc: Chromium support for Netflix, repo: CYBERLINUX }
      - {install: flashplugin,      desc: Adobe Flash Player NPAPI }
      - {install: pepper-flash,     desc: Chromium flash support }
      - {install: filezilla,        desc: Network/Transfer }

    # Office:
      - {install: evince,           desc: Document viewer (PDF,Postscript,djvu,tiff,dvi,XPS,cbr,cbz,cb7 and cbt) }
      - {install: gvim,             desc: Improved version of vi text editor, conflict: vim }
      - {install: leafpad,          desc: Office/Notepad - Simple notepad knock off }

    # Media-codecs:
      - {install: gst-libav,        desc: GStreamer libav Plugin }
      - {install: gst-plugins-bad,  desc: GStreamer Bad Plugins }
      - {install: gst-plugins-base, desc: GStreamer Base Plugins }
      - {install: gst-plugins-good, desc: GStreamer Good Plugins }
      - {install: gst-plugins-ugly, desc: GStreamer Ugly Plugins }
      - {install: libdvdcss,        desc: DVD media codec support }
      - {install: x264,             desc: Open Source H264/AVC video encoder, depof: smplayer }

    # X11-fonts:
      - {install: adobe-source-code-pro-fonts, desc: Mono-spaced coding environments }
      - {install: terminus-font,    desc: Monospace bitmap font for consoles }
      - {install: ttf-bitstream-vera, desc: Bitstream vera fonts }
      - {install: ttf-dejavu,       desc: Bitstream Vera Fonts w/more characters }
      - {install: ttf-droid,        desc: Google Android general purpose fonts }
      - {install: ttf-google-fonts-fun, desc: Handful of fun fonts from the Google Fonts project, repo: CYBERLINUX }
      - {install: ttf-google-fonts-work, desc: 40 best fonts from the Google Fonts project, repo: CYBERLINUX }
      - {install: ttf-hack,         desc: Hand groomed/optically balanced typeface based on Bitstream Vera Mono }
      - {install: ttf-inconsolata-g, desc: Best monospace terminal font, repo: CYBERLINUX }
      - {install: ttf-indic-otf,    desc: Indic Opentype Fonts collection }
      - {install: ttf-liberation,   desc: Red Hats Liberation fonts.  }
      - {install: ttf-ms-fonts,     desc: Microsoft core fonts, repo: CYBERLINUX }
      - {install: ttf-nerd-fonts-symbols, desc: Nerd Font Symbols, repo: CYBERLINUX }
    - config-lite

  ) 
  pkg lite
}

#package_cyberlinux-server-profile()
#{
#  depends=('cyberlinux-lite-profile')
#  conflicts=('cyberlinux-desktop-profile' 'cyberlinux-laptop-profile' 'cyberlinux-netbook-profile' 'cyberlinux-theater-profile')
#  pkg server
#}
#
#package_cyberlinux-theater-profile()
#{
#  depends=('cyberlinux-lite-profile')
#  conflicts=('cyberlinux-desktop-profile' 'cyberlinux-laptop-profile' 'cyberlinux-netbook-profile' 'cyberlinux-server-profile')
#  pkg theater
#}
#
#package_cyberlinux-netbook-profile()
#{
#  depends=('cyberlinux-lite-profile')
#  conflicts=('cyberlinux-desktop-profile' 'cyberlinux-laptop-profile' 'cyberlinux-server-profile' 'cyberlinux-theater-profile')
#  pkg netbook
#}
#
#package_cyberlinux-desktop-profile()
#{
#  depends=('cyberlinux-lite-profile')
#  conflicts=('cyberlinux-server-profile' 'cyberlinux-laptop-profile' 'cyberlinux-netbook-profile' 'cyberlinux-theater-profile')
#  install=desktop.install
#  pkg desktop
#}
#
#package_cyberlinux-laptop-profile()
#{
#  depends=('cyberlinux-lite-profile')
#  conflicts=('cyberlinux-desktop-profile' 'cyberlinux-server-profile' 'cyberlinux-netbook-profile' 'cyberlinux-theater-profile')
#  pkg laptop
#}
